apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tempo
  namespace: monitoring
spec:
  interval: 1h
  timeout: 10m
  releaseName: tempo
  targetNamespace: monitoring
  chart:
    spec:
      chart: tempo-distributed
      version: 1.48.0
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: monitoring

  values:
    overrides:
      defaults:
        metrics_generator:
          processors:
            - span-metrics

    traces:
      otlp:
        http: { enabled: true }
        grpc: { enabled: true }

    querier:
      replicas: 1
      resources:
        requests: { cpu: 50m, memory: 128Mi }
        limits: { cpu: 50m, memory: 128Mi }
    
    queryFrontend:
      replicas: 1
      resources:
        requests: { cpu: 25m, memory: 64Mi }
        limits: { cpu: 25m, memory: 64Mi }

    distributor:
      replicas: 1
      resources:
        requests: { cpu: 50m, memory: 640Mi }
        limits: { cpu: 50m, memory: 640Mi }
      config:
        max_attribute_bytes: 2048

    ingester:
      replicas: 1
      persistence: { enabled: true, size: 3Gi, storageClass: standard }
      resources:
        requests: { cpu: 50m, memory: 640Mi }
        limits: { cpu: 50m, memory: 640Mi }
      config:
        trace_idle_period: 10s
        flush_check_period: 10s
        replication_factor: 1
        max_block_bytes: 67108864
        flush_all_on_shutdown: true

    metricsGenerator:
      enabled: true
      replica: 1
      resources:
        requests: { cpu: 50m, memory: 512Mi }
        limits: { cpu: 50m, memory: 512Mi }
      config:
        processor:
          span_metrics:
            dimensions:
              - status
              - db.system
              - db.collection.name
              - repository.name
              - rpc.system
              - rpc.service
        storage:
          remote_write:
            - name: prometheus
              send_exemplars: true
              url: http://prom-stack-kube-prometheus-prometheus:9090/api/v1/write

    compactor:
      replicas: 1
      resources:
        requests: { cpu: 25m, memory: 64Mi }
        limits: { cpu: 25m, memory: 64Mi }

    memcached:
      replicas: 1
      resources:
        requests: { cpu: 25m, memory: 32Mi }
        limits: { cpu: 25m, memory: 32Mi }
